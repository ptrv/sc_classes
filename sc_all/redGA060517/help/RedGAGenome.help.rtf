{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue0;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf2 RedGAGenome\cf3 			
\fs24 genome for genetic algorithms
\f1\b0 \

\f0\b\fs36 \

\f1\b0\fs24 superclass: \cf2 Object
\fs36 \cf3 \
\

\fs24 keeps an array of values (genes) together with a single rating value (fitness).  the genes can represent anything eg breakpoints, drumpatterns, whole system presets, synthesis network (see \cf2 RedGAPhenome\cf3 ).  with the fitness value, you or some fitnessfunction can rate how well the genome performs/sounds.\
breed new genomes with the \cf2 RedGA\cf3  class.
\fs36 \

\fs24 \
	
\f0\b *new(array, fitness)
\f1\b0 \
		an array of genes that can be of any length.  by default the class expect genes as floats 0-1.\
		remember to change \cf2 RedGA\cf3 -mutationFunc if you want to work with genes in a different range.\
		\cf0 fitness: set fitness for this genome.  defaults to 0.\cf3 \
	\
	
\f0\b chromosome
\f1\b0 \
		get or set the array of genes\
	\
	
\f0\b fitness
\f1\b0 \
		get or set the fitness\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf3 \
\
\cf4 //create 2 new genomes\cf3 \
a= \cf2 RedGAGenome\cf3 ([0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]);\
b= \cf2 RedGAGenome\cf3 (\{1.0.rand\}.dup(10));\
\
\cf4 //access genes\cf3 \
a.chromosome;}